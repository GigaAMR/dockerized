---
apiVersion: v1
kind: Service
metadata:
  name: sing-box-svc
  namespace: proxynet
  labels:
    app: sing-box
spec:
  selector:
    app: sing-box
  type: ClusterIP
  ports:
    - name: socks5
      protocol: UDP
      port: 1080
      targetPort: mixed-udp
    - name: http
      protocol: TCP
      port: 1080
      targetPort: mixed-tcp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sing-box-dep
  namespace: proxynet
  labels:
    app: sing-box
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: sing-box
  template:
    metadata:
      labels:
        app: sing-box
    spec:
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 1.1.1.1
          - 1.0.0.1
          - 8.8.8.8
      volumes:
        - name: sing-box-config-vol
          configMap:
            name: sing-box-config
      containers:
      - name: sing-box
        image: ghcr.io/sagernet/sing-box:v1.7.5
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          value: Asia/Shanghai
        - name: CONFIG_FILE
          valueFrom:
            configMapKeyRef:
              name: sing-box-config
              key: CONFIG_FILE
        volumeMounts:
        - name: sing-box-config-vol
          mountPath: "/etc/sing-box/config.json"
          subPath: "config.json"
          readOnly: true
        ports:
        - name: mixed-tcp
          containerPort: 51080
          protocol: TCP
        - name: mixed-udp
          containerPort: 51080
          protocol: UDP
        args:
          - "run"
          - "-c"
          - "$(CONFIG_FILE)"
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
      restartPolicy: Always
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sing-box-config
  namespace: proxynet
data:
  CONFIG_FILE: "/etc/sing-box/config.json"
  config.json: |
    {
      "log": {
        "level": "warn",
        "timestamp": true
      },
      "dns": {
        "servers": [
          {
            "tag": "alidns",
            "address": "https://223.5.5.5/dns-query",
            "address_strategy": "ipv4_only",
            "strategy": "prefer_ipv4",
            "detour": "direct"
          },
          {
            "tag": "google",
            "address": "https://8.8.8.8/dns-query",
            "address_strategy": "ipv4_only",
            "strategy": "prefer_ipv4",
            "detour": "direct"
          },
          {
            "tag": "cloudflare",
            "address": "https://1.1.1.1/dns-query",
            "address_strategy": "ipv4_only",
            "strategy": "prefer_ipv4",
            "detour": "direct"
          },
          {
            "tag": "dns-block",
            "address": "rcode://success"
          }
        ],
        "rules": [
          {
            "geosite": "category-ads-all",
            "server": "dns-block",
            "disable_cache": true
          },
          {
            "domain_suffix": [
              "appcenter.ms",
              "app-measurement.com",
              "firebase.io",
              "crashlytics.com",
              "google-analytics.com"
            ],
            "server": "dns-block",
            "disable_cache": true
          },
          {
            "outbound": "any",
            "server": "cloudflare"
          }
        ],
        "final": "cloudflare",
        "fakeip": {
          "enabled": true,
          "inet4_range": "198.18.0.0/15"
        },
        "strategy": "prefer_ipv4"
      },
      "ntp": {},
      "inbounds": [
        {
          "type": "mixed",
          "tag": "mixed-in",
          "listen": "0.0.0.0",
          "listen_port": 51080,
          "tcp_fast_open": true,
          "udp_fragment": true,
          "sniff": true
        }
      ],
      "outbounds": [
        {
          "type": "selector",
          "tag": "üìü Telegram",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üê¶ Twitter",
          "outbounds": ["wireguard-out"]
        },
        {
          "type": "selector",
          "tag": "üë§ Facebook",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üõçÔ∏è Amazon",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üçé Apple",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üåå Google",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üß© Microsoft",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üéÆ Game",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üì∫ Bilibili",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "ü§ñ OpenAI",
          "outbounds": ["wireguard-out"]
        },
        {
          "type": "selector",
          "tag": "üé¨ MediaVideo",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üåè !cn",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üåè cn",
          "outbounds": ["DIRECT", "PROXY"]
        },
        {
          "type": "selector",
          "tag": "üõë AdBlock",
          "outbounds": ["block", "direct"]
        },
        {
          "type": "urltest",
          "tag": "AUTO",
          "outbounds": ["wireguard-out"],
          "url": "http://www.gstatic.com/generate_204",
          "interval": "10m0s",
          "tolerance": 50
        },
        {
          "type": "selector",
          "tag": "PROXY",
          "outbounds": ["wireguard-out", "AUTO"]
        },
        {
          "type": "selector",
          "tag": "DIRECT",
          "outbounds": ["direct", "block", "PROXY"]
        },
        {
          "type": "direct",
          "tag": "direct"
        },
        {
          "type": "block",
          "tag": "block"
        },
        {
          "type": "dns",
          "tag": "dns-out"
        },
        {
          "type": "direct",
          "tag": "warp-IPv4-out",
          "detour": "wireguard-out",
          "domain_strategy": "ipv4_only"
        },
        {
          "type": "direct",
          "tag": "warp-IPv6-out",
          "detour": "wireguard-out",
          "domain_strategy": "ipv6_only"
        },
        {
          "type": "wireguard",
          "tag": "wireguard-out",
          "local_address": [
            "172.16.0.2/32",
            "2606:4700:110:860b:4ec1:dd8f:f20b:507b/128"
          ],
          "private_key": "<CHANGE_YOUR_WARP_PRIVATE_KEY>",
          "server": "engage.cloudflareclient.com",
          "server_port": 2408,
          "peer_public_key": "bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=",
          "reserved": "<CHANGE_YOUR_WARP_RESERVED>",
          "workers": 8,
          "mtu": 1280
        }
      ],
      "route": {
        "geoip": {
          "path": "/etc/sing-box/geoip.db",
          "download_url": "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.db",
          "download_detour": "direct"
        },
        "geosite": {
          "path": "/etc/sing-box/geosite.db",
          "download_url": "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.db",
          "download_detour": "direct"
        },
        "rules": [
          {
            "protocol": "dns",
            "outbound": "dns-out"
          },
          {
            "network": "udp",
            "port": 443,
            "outbound": "block"
          },
          {
            "geosite": "category-ads-all",
            "outbound": "üõë AdBlock"
          },
          {
            "domain_suffix": [
              "appcenter.ms",
              "app-measurement.com",
              "firebase.io",
              "crashlytics.com",
              "google-analytics.com"
            ],
            "outbound": "üõë AdBlock"
          },
          {
            "domain": [
              "clash.razord.top",
              "yacd.metacubex.one",
              "yacd.haishan.me",
              "d.metacubex.one"
            ],
            "outbound": "DIRECT"
          },
          {
            "domain_suffix": "googleapis.cn",
            "outbound": "DIRECT"
          },
          {
            "geosite": "openai",
            "outbound": "ü§ñ OpenAI"
          },
          {
            "geosite": "youtube",
            "outbound": "üåå Google"
          },
          {
            "geoip": "google",
            "outbound": "üåå Google"
          },
          {
            "geosite": ["google", "github"],
            "outbound": "üåå Google"
          },
          {
            "geoip": "telegram",
            "outbound": "üìü Telegram"
          },
          {
            "geosite": "telegram",
            "outbound": "üìü Telegram"
          },
          {
            "geoip": "twitter",
            "outbound": "üê¶ Twitter"
          },
          {
            "geosite": "twitter",
            "outbound": "üê¶ Twitter"
          },
          {
            "geoip": "facebook",
            "outbound": "üë§ Facebook"
          },
          {
            "geosite": ["facebook", "instagram"],
            "outbound": "üë§ Facebook"
          },
          {
            "geosite": "amazon",
            "outbound": "üõçÔ∏è Amazon"
          },
          {
            "geosite": "apple",
            "outbound": "üçé Apple"
          },
          {
            "geosite": "apple-cn",
            "outbound": "üçé Apple"
          },
          {
            "geosite": "microsoft",
            "outbound": "üß© Microsoft"
          },
          {
            "geosite": "category-games",
            "outbound": "üéÆ Game"
          },
          {
            "geosite": "bilibili",
            "outbound": "üì∫ Bilibili"
          },
          {
            "geoip": "netflix",
            "outbound": "üé¨ MediaVideo"
          },
          {
            "geosite": ["tiktok", "netflix", "hbo", "disney", "primevideo"],
            "outbound": "üé¨ MediaVideo"
          },
          {
            "geosite": ["geolocation-!cn", "tld-!cn"],
            "outbound": "üåè !cn"
          },
          {
            "geoip": ["private", "cn"],
            "outbound": "üåè cn"
          },
          {
            "geosite": "cn",
            "outbound": "üåè cn"
          }
        ],
        "final": "DIRECT",
        "auto_detect_interface": true
      },
      "experimental": {
        "clash_api": {
          "external_controller": "0.0.0.0:59090",
          "store_selected": true,
          "cache_file": "/etc/sing-box/clash-selected.db"
        }
      }
    }
